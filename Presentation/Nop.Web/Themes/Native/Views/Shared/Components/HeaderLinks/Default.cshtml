@model HeaderLinksModel
@using Nop.Core.Domain.Customers
@inject Nop.Core.IWebHelper webHelper

<div class="customer-header-links">
    <ul>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksBefore })
        @if (Model.IsAuthenticated)
        {
            <li><a href="@Url.RouteUrl("CustomerInfo")" class="ico-account">@T("Account.MyAccount")</a></li>
            <li><a href="@Url.RouteUrl("Logout")" class="ico-logout">@T("Account.Logout")</a></li>
        }
        else
        {
            var returnUrl = Context.Request.Query.TryGetValue("returnUrl", out var url) && !StringValues.IsNullOrEmpty(url)
                ? url.ToString()
                : webHelper.GetRawUrl(Context.Request);

            @if (Model.RegistrationType != UserRegistrationType.Disabled)
            {
                <li><a href="@Url.RouteUrl("Register", new { returnUrl })" class="ico-register">@T("Account.Register")</a></li>
            }
            <li><a href="@Url.RouteUrl("Login", new { returnUrl })" class="ico-login">@T("Account.Login")</a></li>
        }
        @if (Model.AllowPrivateMessages)
        {
            <li>
                <a href="@Url.RouteUrl("PrivateMessages", new { tab = "" })" class="ico-inbox">
                    <span class="inbox-label">@T("PrivateMessages.Inbox")</span>
                    <span class="inbox-unread">
                        @if (String.IsNullOrEmpty(Model.UnreadPrivateMessages))
                        {
                            @T("PrivateMessages.TotalUnread", 0)
                        }
                        else
                        {
                            @Model.UnreadPrivateMessages
                        }

                    </span>
                </a>
            </li>
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksAfter })
    </ul>
    @if (Model.AllowPrivateMessages && !string.IsNullOrEmpty(Model.AlertMessage))
    {
        //new private message notification
        <script asp-location="Footer">
            $(document).ready(function () {
                displayPopupNotification('@Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))', 'success', false);
            });
        </script>
    }
</div>

<div class="header-right">
    <div class="wishlist-links-wrapper">
        <a href="/">  @T("forum.home", 0)</a>
    </div> 
    <div class="search-box store-search-box">
        @await Component.InvokeAsync("SearchBox")
    </div>

    <div class="wishlist-cart-wrapper">

        @if (Model.WishlistEnabled)
        {
            <div class="wishlist-links-wrapper">
                <a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist">
                    <span class="wishlist-label">@T("Wishlist")</span>
                    <span class="wishlist-qty">@T("Wishlist.HeaderQuantity", Model.WishlistItems)</span>
                </a>
            </div>
        }

        @if (Model.ShoppingCartEnabled)
        {
            <div id="topcartlink">
                <a href="@Url.RouteUrl("ShoppingCart")" class="ico-cart">
                    <span class="cart-qty">@T("ShoppingCart.HeaderQuantity", Model.ShoppingCartItems)</span>
                    <span class="cart-label">@T("ShoppingCart")</span>
                    @await Component.InvokeAsync("Widget", new { widgetZone = "native_mini_shopping_cart" })
                </a>
            </div>
            @await Component.InvokeAsync("FlyoutShoppingCart")

            <script asp-location="Footer">
                $(document).ready(function () {
                    $('.header').on('mouseenter', '#topcartlink', function () {
                        $('#flyout-cart').addClass('active');
                    });
                    $('.header').on('mouseleave', '#topcartlink', function () {
                        $('#flyout-cart').removeClass('active');
                    });
                    $('.header').on('mouseenter', '#flyout-cart', function () {
                        $('#flyout-cart').addClass('active');
                    });
                    $('.header').on('mouseleave', '#flyout-cart', function () {
                        $('#flyout-cart').removeClass('active');
                    });
                });
            </script>
        }
    </div>

</div>