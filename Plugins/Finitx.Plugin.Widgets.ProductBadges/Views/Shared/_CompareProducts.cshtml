@model CompareProductsModel
@{


    //title
    Html.AddTitleParts(T("PageTitle.CompareProducts").Text);
    //page class
    Html.AppendPageCssClassParts("html-compare-products-page");
}
@{
    var columnWidth = "";
    if (Model.Products.Count > 0)
    {
        columnWidth = Math.Round((decimal)(100M / (Model.Products.Count + 1)), 0).ToString() + "%";
    }

    var uniqueGroupes = new List<ProductSpecificationAttributeGroupModel>();
    foreach (var group in Model.Products.SelectMany(p => p.ProductSpecificationModel.Groups))
    {
        if (!uniqueGroupes.Any(g => g.Id == group.Id))
            uniqueGroupes.Add(group);
    }
}
<style>
    .table-wrapper {
        width: 90%;
    }

    td {
        border: 0px !important;
    }

    tr:hover {
        color: forestgreen;
        background-color: hsl(0,0%,96.5%);
    }

    tr.sticky {
        position: -webkit-sticky; /* Safari */
        position: sticky;
        top: 0;
    }

    td.sticky {
        position: -webkit-sticky; /* Safari */
        position: sticky;
        top: 0;
    }

    .product-name {
        font-weight: bolder;
        width: 35%;
    }
</style>




<div class="page">

    <div class="page-body">
        @if (Model.Products.Count > 1)
        {

            <div class="table-wrapper">
                <table class="compare-products-table">
                    <tbody>


                        <tr class="product-name sticky">
                            <td style="width: @columnWidth;">
                                <label>@T("Products.Compare.Name")</label>
                            </td>
                            @foreach (var product in Model.Products)
                            {
                                <td style="width: @columnWidth;">
                                    <a href="@Url.RouteUrl("Product", new { SeName = product.SeName })">@product.Name</a>
                                </td>
                            }
                        </tr>
                        <tr class="product-price">
                            <td>
                                <label>@T("Products.Compare.Price")</label>
                            </td>
                            @foreach (var product in Model.Products)
                            {
                                <td style="width: @columnWidth;">
                                    <label> @product.ProductPrice.Price</label>
                                </td>
                            }
                        </tr>
                        @if (Model.IncludeShortDescriptionInCompareProducts)
                        {
                            <tr class="short-description">
                                <td>
                                    <label>@T("Products.Compare.ShortDescription")</label>
                                </td>
                                @foreach (var product in Model.Products)
                                {
                                    <td style="width: @columnWidth;">
                                        @Html.Raw(product.ShortDescription)
                                    </td>
                                }
                            </tr>
                        }
                        @if (Model.IncludeFullDescriptionInCompareProducts)
                        {
                            <tr class="full-description">
                                <td>
                                    <label>@T("Products.Compare.FullDescription")</label>
                                </td>
                                @foreach (var product in Model.Products)
                                {
                                    <td style="width: @columnWidth;">
                                        @Html.Raw(product.FullDescription)
                                    </td>
                                }
                            </tr>
                        }
                        @foreach (var group in uniqueGroupes)
                        {
                            if (group.Attributes.Count > 0)
                            {
                                @if (group.Id > 0)
                                {
                                    <tr class="specification-group product-name">
                                        <td class="sticky ">
                                            <label>@group.Name</label>
                                        </td>
                                        @foreach (var product in Model.Products)
                                        {
                                            <td style="width: @columnWidth;">
                                            </td>
                                        }
                                    </tr>
                                }

                                var uniqueGroupAttributes = new List<ProductSpecificationAttributeModel>();
                                foreach (var attribute in Model.Products.SelectMany(p => p.ProductSpecificationModel.Groups.Where(g => g.Id == group.Id).SelectMany(g => g.Attributes)))
                                {
                                    if (!uniqueGroupAttributes.Any(sa => sa.Id == attribute.Id))
                                        uniqueGroupAttributes.Add(attribute);
                                }
                                @foreach (var specificationAttribute in uniqueGroupAttributes)
                                {
                                    <tr class="specification">
                                        <td>
                                            <label>@specificationAttribute.Name</label>
                                        </td>
                                        @foreach (var product in Model.Products)
                                        {
                                            var foundProductSpec = product.ProductSpecificationModel.Groups
                                                .Where(g => g.Id == group.Id)
                                                .SelectMany(g => g.Attributes)
                                                .FirstOrDefault(sa => sa.Id == specificationAttribute.Id);

                                            <td style="width: @columnWidth;">
                                                <label>
                                                    @if (foundProductSpec != null)
                                                    {
                                                        for (int i = 0; i < foundProductSpec.Values.Count; i++)
                                                        {
                                                            var value = foundProductSpec.Values[i];

                                                            if (string.IsNullOrEmpty(value.ColorSquaresRgb))
                                                            {

                                                                @Html.Raw(value.ValueRaw == "Enabled" ? "&check;" : (value.ValueRaw == "Disabled" ? "&#10007;" : value.ValueRaw))
                                                            }
                                                            else
                                                            {
                                                                <div class="attribute-squares color-squares">
                                                                    <span class="attribute-square-container" title="@Html.Raw(value.ValueRaw)">
                                                                        <span class="attribute-square" style="background-color: @(value.ColorSquaresRgb);">&nbsp;</span>
                                                                    </span>
                                                                </div>
                                                            }

                                                            if (i != foundProductSpec.Values.Count - 1)
                                                            {
                                                                <text>,&nbsp;</text>
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <text>&nbsp;</text>
                                                    }
                                                </label>
                                            </td>
                                        }
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="no-data">
                @T("Products.Compare.NoItems")
            </div>
        }
    </div>
</div>
<script>


    //$("tr").mouseenter(function () {
    //    console.log("ffffffff");
    //    if (!$(this).hasClass("sticky")) {
    //        $(this).addClass("product-name");
    //    }
    //});
    //$("tr").mouseleave(function () {
    //    console.log("ffffffff");
    //    if (!$(this).hasClass("sticky")) {
    //        $(this).removeClass("product-name");
    //    }
    //});
</script>